<?xml version="1.0" encoding="UTF-8"?>
<Configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns="https://logging.apache.org/xml/ns"
               xsi:schemaLocation="https://logging.apache.org/xml/ns https://logging.apache.org/xml/ns/log4j-config-2.xsd"
               name="maple" status="TRACE" monitorInterval="30">
    <!--<Configuration status="WARN" monitorInterval="30">-->
    <properties>
        <property name="LOG_HOME" value="${LOG_PATH:-./logs/}"/>
        <Property name="LOG_PATTERN" value="[%style{%d{ISO8601}}{bright,green}] [traceId=%style{%X{X-B3-TraceId}}{red}] [%t] %style{%p}{bright,green} %style{%C{}.%M}{bright,yellow}:%L - %msg%n%style{%xEx}{bright,red}"/>
        <Property name="LOG_PATTERN_WITHOUT_TRACE_ID" value="[%style{%d{ISO8601}}{bright,green}] [%t] %style{%p}{bright,green} %style{%C{}.%M}{bright,yellow}:%L - %msg%n%style{%xEx}{bright,red}"/>
    </properties>
    <Appenders>
        <!--*********************控制台日志***********************-->
        <Console name="consoleAppender" target="SYSTEM_OUT">
            <Filters>
                <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!--设置日志格式及颜色-->
            <PatternLayout
                    pattern="${LOG_PATTERN}" disableAnsi="false" noConsoleNoAnsi="false"/>
        </Console>

        <!--*********************文件日志***********************-->
        <!--all级别日志-->
        <RollingFile name="allFileAppender"
                     fileName="${LOG_HOME}/all.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/all-%d{yyyy-MM-dd}-%i.log.gz">
            <Filters>
                <ThresholdFilter level="ALL" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--debug级别日志-->
        <RollingFile name="debugFileAppender"
                     fileName="${LOG_HOME}/debug.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log.gz">
            <!--只接受DEBUG级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="DEBUG"/>
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--info级别日志-->
        <RollingFile name="infoFileAppender"
                     fileName="${LOG_HOME}/info.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.gz">
            <!--只接受INFO级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="INFO"/>
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--warn级别日志-->
        <RollingFile name="warnFileAppender"
                     fileName="${LOG_HOME}/warn.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log.gz">
            <!--只接受WARN级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="WARN"/>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--error及更高级别日志-->
        <RollingFile name="errorFileAppender"
                     fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.gz">
            <!--只接受ERROR级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="ERROR"/>
                <!--<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>--> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--json格式error级别日志-->
        <RollingFile name="errorJsonAppender"
                     fileName="${LOG_HOME}/error-json.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-json-%d{yyyy-MM-dd}-%i.log.gz">
            <!--只接受WARN级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="ERROR"/>
                <!--<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>--> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <JsonLayout compact="true" eventEol="true" locationInfo="true"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
            </Policies>
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
                <!--<Delete basePath="${LOG_HOME}" maxDepth="1">
                    <IfFileName glob="*/*.log*"/>
                    <IfLastModified age="7d"/>
                </Delete>-->
                <!--<Delete basePath="logs/app/history" maxDepth="1">
                    <IfFileName glob="*.vsdx"/>
                </Delete>-->
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--druid的日志记录追加器-->
        <RollingFile name="druidSqlRollingFile" fileName="${LOG_HOME}/druid-sql.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/druid-sql-%d{yyyy-MM-dd}-%i.log.gz">
            <!--<PatternLayout  pattern="${LOG_PATTERN}"/>-->
            <!--只接受WARN级别的日志，其余的全部拒绝处理-->
            <Filters>
                <ThresholdFilter level="DEBUG"/>
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/> <!--拒绝的日志级别及该日志级别之上的-->
            </Filters>
            <!--设置日志格式-->
            <PatternLayout pattern="${LOG_PATTERN_WITHOUT_TRACE_ID}"/>
            <Policies>
                <!-- 设置日志文件切分参数 -->
                <!--<OnStartupTriggeringPolicy/>-->
                <!--设置日志基础文件大小，超过该大小就触发日志文件滚动更新-->
                <SizeBasedTriggeringPolicy size="500 MB"/>
                <!--设置日志文件滚动更新的时间，依赖于文件命名filePattern的设置-->
                <TimeBasedTriggeringPolicy interval="2" modulate="true"/>
            </Policies>
            <!--设置日志的文件个数上限，不设置默认为7个，超过大小后会被覆盖；依赖于filePattern中的%i-->
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="**/*.log*"/>
                    <IfLastModified age="90d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!-- 根日志设置 -->
        <Root level="TRACE" additivity="true"> <!-- 必须设置为比 Logger中配置的级别低 -->
            <AppenderRef ref="consoleAppender" level="TRACE"/>
            <AppenderRef ref="infoFileAppender" level="INFO"/>
            <AppenderRef ref="druidSqlRollingFile" level="DEBUG"/>
            <!--AppenderRef ref="allFileAppender" level="info"/-->
            <!--AppenderRef ref="debugFileAppender" level="debug"/-->
            <!--AppenderRef ref="warnFileAppender" level="warn"/-->
            <!--AppenderRef ref="errorFileAppender" level="error"/-->
            <!--AppenderRef ref="errorJsonAppender" level="error"/-->
        </Root>

        <!--ES 日志信息-->
        <Logger name="org.elasticsearch.client.RequestLogger" level="INFO">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <Logger name="org.elasticsearch" level="INFO">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--spring日志-->
        <Logger name="org.springframework" level="ERROR">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--记录druid-sql的记录-->
        <logger name="druid.sql.Statement" level="debug" additivity="false">
            <AppenderRef ref="druidSqlRollingFile"/>
        </logger>
        <!--alibaba日志-->
        <Logger name="com.alibaba" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--apache日志-->
        <Logger name="org.apache" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--redisson日志-->
        <Logger name="org.redisson" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--netty-->
        <Logger name="io.netty" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!--druid数据源日志-->
        <Logger name="druid.sql" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!-- mybatis日志 -->
        <Logger name="com.p6spy" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <Logger name="com.baomidou" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <Logger name="org.hibernate" level="WARN">
            <AppenderRef ref="consoleAppender"/>
        </Logger>
        <!-- maple框架 -->
        <Logger name="cn.maple" level="INFO">
            <AppenderRef ref="infoFileAppender"/>
        </Logger>
        <!-- 业务项目 -->
        <Logger name="cn.gaple" level="INFO">
            <AppenderRef ref="infoFileAppender"/>
        </Logger>
    </Loggers>
</Configuration>